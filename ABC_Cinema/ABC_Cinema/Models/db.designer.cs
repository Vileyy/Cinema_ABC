#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ABC_Cinema.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="RapPhim")]
	public partial class dbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBinhLuan(BinhLuan instance);
    partial void UpdateBinhLuan(BinhLuan instance);
    partial void DeleteBinhLuan(BinhLuan instance);
    partial void InsertDanhMuc(DanhMuc instance);
    partial void UpdateDanhMuc(DanhMuc instance);
    partial void DeleteDanhMuc(DanhMuc instance);
    partial void InsertGhe(Ghe instance);
    partial void UpdateGhe(Ghe instance);
    partial void DeleteGhe(Ghe instance);
    partial void InsertLichChieu(LichChieu instance);
    partial void UpdateLichChieu(LichChieu instance);
    partial void DeleteLichChieu(LichChieu instance);
    partial void InsertLoaiGhe(LoaiGhe instance);
    partial void UpdateLoaiGhe(LoaiGhe instance);
    partial void DeleteLoaiGhe(LoaiGhe instance);
    partial void InsertLoaiPhim(LoaiPhim instance);
    partial void UpdateLoaiPhim(LoaiPhim instance);
    partial void DeleteLoaiPhim(LoaiPhim instance);
    partial void InsertLoaiPhong(LoaiPhong instance);
    partial void UpdateLoaiPhong(LoaiPhong instance);
    partial void DeleteLoaiPhong(LoaiPhong instance);
    partial void InsertMENU(MENU instance);
    partial void UpdateMENU(MENU instance);
    partial void DeleteMENU(MENU instance);
    partial void InsertNoiDung(NoiDung instance);
    partial void UpdateNoiDung(NoiDung instance);
    partial void DeleteNoiDung(NoiDung instance);
    partial void InsertPhong(Phong instance);
    partial void UpdatePhong(Phong instance);
    partial void DeletePhong(Phong instance);
    partial void InsertPhim(Phim instance);
    partial void UpdatePhim(Phim instance);
    partial void DeletePhim(Phim instance);
    partial void InsertPhong_Ghe(Phong_Ghe instance);
    partial void UpdatePhong_Ghe(Phong_Ghe instance);
    partial void DeletePhong_Ghe(Phong_Ghe instance);
    partial void InsertRapPhim(RapPhim instance);
    partial void UpdateRapPhim(RapPhim instance);
    partial void DeleteRapPhim(RapPhim instance);
    partial void InsertTaiKhoan(TaiKhoan instance);
    partial void UpdateTaiKhoan(TaiKhoan instance);
    partial void DeleteTaiKhoan(TaiKhoan instance);
    partial void InsertThongTin(ThongTin instance);
    partial void UpdateThongTin(ThongTin instance);
    partial void DeleteThongTin(ThongTin instance);
    partial void InsertTRANGTIN(TRANGTIN instance);
    partial void UpdateTRANGTIN(TRANGTIN instance);
    partial void DeleteTRANGTIN(TRANGTIN instance);
    partial void InsertVe(Ve instance);
    partial void UpdateVe(Ve instance);
    partial void DeleteVe(Ve instance);
    partial void InsertVe_Ghe(Ve_Ghe instance);
    partial void UpdateVe_Ghe(Ve_Ghe instance);
    partial void DeleteVe_Ghe(Ve_Ghe instance);
    partial void InsertSlider(Slider instance);
    partial void UpdateSlider(Slider instance);
    partial void DeleteSlider(Slider instance);
    #endregion
		
		public dbDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["RapPhimConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BinhLuan> BinhLuans
		{
			get
			{
				return this.GetTable<BinhLuan>();
			}
		}
		
		public System.Data.Linq.Table<DanhMuc> DanhMucs
		{
			get
			{
				return this.GetTable<DanhMuc>();
			}
		}
		
		public System.Data.Linq.Table<Ghe> Ghes
		{
			get
			{
				return this.GetTable<Ghe>();
			}
		}
		
		public System.Data.Linq.Table<LichChieu> LichChieus
		{
			get
			{
				return this.GetTable<LichChieu>();
			}
		}
		
		public System.Data.Linq.Table<LoaiGhe> LoaiGhes
		{
			get
			{
				return this.GetTable<LoaiGhe>();
			}
		}
		
		public System.Data.Linq.Table<LoaiPhim> LoaiPhims
		{
			get
			{
				return this.GetTable<LoaiPhim>();
			}
		}
		
		public System.Data.Linq.Table<LoaiPhong> LoaiPhongs
		{
			get
			{
				return this.GetTable<LoaiPhong>();
			}
		}
		
		public System.Data.Linq.Table<MENU> MENUs
		{
			get
			{
				return this.GetTable<MENU>();
			}
		}
		
		public System.Data.Linq.Table<NoiDung> NoiDungs
		{
			get
			{
				return this.GetTable<NoiDung>();
			}
		}
		
		public System.Data.Linq.Table<Phong> Phongs
		{
			get
			{
				return this.GetTable<Phong>();
			}
		}
		
		public System.Data.Linq.Table<Phim> Phims
		{
			get
			{
				return this.GetTable<Phim>();
			}
		}
		
		public System.Data.Linq.Table<Phong_Ghe> Phong_Ghes
		{
			get
			{
				return this.GetTable<Phong_Ghe>();
			}
		}
		
		public System.Data.Linq.Table<RapPhim> RapPhims
		{
			get
			{
				return this.GetTable<RapPhim>();
			}
		}
		
		public System.Data.Linq.Table<TaiKhoan> TaiKhoans
		{
			get
			{
				return this.GetTable<TaiKhoan>();
			}
		}
		
		public System.Data.Linq.Table<ThongTin> ThongTins
		{
			get
			{
				return this.GetTable<ThongTin>();
			}
		}
		
		public System.Data.Linq.Table<TRANGTIN> TRANGTINs
		{
			get
			{
				return this.GetTable<TRANGTIN>();
			}
		}
		
		public System.Data.Linq.Table<Ve> Ves
		{
			get
			{
				return this.GetTable<Ve>();
			}
		}
		
		public System.Data.Linq.Table<Ve_Ghe> Ve_Ghes
		{
			get
			{
				return this.GetTable<Ve_Ghe>();
			}
		}
		
		public System.Data.Linq.Table<Slider> Sliders
		{
			get
			{
				return this.GetTable<Slider>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BinhLuan")]
	public partial class BinhLuan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_BinhLuan;
		
		private System.Nullable<int> _Id_Phim;
		
		private string _NoiDung;
		
		private System.DateTime _NgayDang;
		
		private bool _TinhTrang;
		
		private System.Nullable<int> _DanhGia;
		
		private EntitySet<NoiDung> _NoiDungs;
		
		private EntityRef<Phim> _Phim;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_BinhLuanChanging(int value);
    partial void OnId_BinhLuanChanged();
    partial void OnId_PhimChanging(System.Nullable<int> value);
    partial void OnId_PhimChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnNgayDangChanging(System.DateTime value);
    partial void OnNgayDangChanged();
    partial void OnTinhTrangChanging(bool value);
    partial void OnTinhTrangChanged();
    partial void OnDanhGiaChanging(System.Nullable<int> value);
    partial void OnDanhGiaChanged();
    #endregion
		
		public BinhLuan()
		{
			this._NoiDungs = new EntitySet<NoiDung>(new Action<NoiDung>(this.attach_NoiDungs), new Action<NoiDung>(this.detach_NoiDungs));
			this._Phim = default(EntityRef<Phim>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_BinhLuan", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_BinhLuan
		{
			get
			{
				return this._Id_BinhLuan;
			}
			set
			{
				if ((this._Id_BinhLuan != value))
				{
					this.OnId_BinhLuanChanging(value);
					this.SendPropertyChanging();
					this._Id_BinhLuan = value;
					this.SendPropertyChanged("Id_BinhLuan");
					this.OnId_BinhLuanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Phim", DbType="Int")]
		public System.Nullable<int> Id_Phim
		{
			get
			{
				return this._Id_Phim;
			}
			set
			{
				if ((this._Id_Phim != value))
				{
					if (this._Phim.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_PhimChanging(value);
					this.SendPropertyChanging();
					this._Id_Phim = value;
					this.SendPropertyChanged("Id_Phim");
					this.OnId_PhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDang", DbType="DateTime NOT NULL")]
		public System.DateTime NgayDang
		{
			get
			{
				return this._NgayDang;
			}
			set
			{
				if ((this._NgayDang != value))
				{
					this.OnNgayDangChanging(value);
					this.SendPropertyChanging();
					this._NgayDang = value;
					this.SendPropertyChanged("NgayDang");
					this.OnNgayDangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="Bit NOT NULL")]
		public bool TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DanhGia", DbType="Int")]
		public System.Nullable<int> DanhGia
		{
			get
			{
				return this._DanhGia;
			}
			set
			{
				if ((this._DanhGia != value))
				{
					this.OnDanhGiaChanging(value);
					this.SendPropertyChanging();
					this._DanhGia = value;
					this.SendPropertyChanged("DanhGia");
					this.OnDanhGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BinhLuan_NoiDung", Storage="_NoiDungs", ThisKey="Id_BinhLuan", OtherKey="Id_BinhLuan")]
		public EntitySet<NoiDung> NoiDungs
		{
			get
			{
				return this._NoiDungs;
			}
			set
			{
				this._NoiDungs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phim_BinhLuan", Storage="_Phim", ThisKey="Id_Phim", OtherKey="Id_Phim", IsForeignKey=true)]
		public Phim Phim
		{
			get
			{
				return this._Phim.Entity;
			}
			set
			{
				Phim previousValue = this._Phim.Entity;
				if (((previousValue != value) 
							|| (this._Phim.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Phim.Entity = null;
						previousValue.BinhLuans.Remove(this);
					}
					this._Phim.Entity = value;
					if ((value != null))
					{
						value.BinhLuans.Add(this);
						this._Id_Phim = value.Id_Phim;
					}
					else
					{
						this._Id_Phim = default(Nullable<int>);
					}
					this.SendPropertyChanged("Phim");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NoiDungs(NoiDung entity)
		{
			this.SendPropertyChanging();
			entity.BinhLuan = this;
		}
		
		private void detach_NoiDungs(NoiDung entity)
		{
			this.SendPropertyChanging();
			entity.BinhLuan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhMuc")]
	public partial class DanhMuc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_DanhMuc;
		
		private string _TenDanhMuc;
		
		private EntitySet<Phim> _Phims;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_DanhMucChanging(int value);
    partial void OnId_DanhMucChanged();
    partial void OnTenDanhMucChanging(string value);
    partial void OnTenDanhMucChanged();
    #endregion
		
		public DanhMuc()
		{
			this._Phims = new EntitySet<Phim>(new Action<Phim>(this.attach_Phims), new Action<Phim>(this.detach_Phims));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_DanhMuc", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_DanhMuc
		{
			get
			{
				return this._Id_DanhMuc;
			}
			set
			{
				if ((this._Id_DanhMuc != value))
				{
					this.OnId_DanhMucChanging(value);
					this.SendPropertyChanging();
					this._Id_DanhMuc = value;
					this.SendPropertyChanged("Id_DanhMuc");
					this.OnId_DanhMucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDanhMuc", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TenDanhMuc
		{
			get
			{
				return this._TenDanhMuc;
			}
			set
			{
				if ((this._TenDanhMuc != value))
				{
					this.OnTenDanhMucChanging(value);
					this.SendPropertyChanging();
					this._TenDanhMuc = value;
					this.SendPropertyChanged("TenDanhMuc");
					this.OnTenDanhMucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMuc_Phim", Storage="_Phims", ThisKey="Id_DanhMuc", OtherKey="Id_DanhMuc")]
		public EntitySet<Phim> Phims
		{
			get
			{
				return this._Phims;
			}
			set
			{
				this._Phims.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Phims(Phim entity)
		{
			this.SendPropertyChanging();
			entity.DanhMuc = this;
		}
		
		private void detach_Phims(Phim entity)
		{
			this.SendPropertyChanging();
			entity.DanhMuc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ghe")]
	public partial class Ghe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Ghe;
		
		private System.Nullable<int> _Id_LoaiGhe;
		
		private string _TenGhe;
		
		private EntitySet<Phong_Ghe> _Phong_Ghes;
		
		private EntityRef<LoaiGhe> _LoaiGhe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_GheChanging(int value);
    partial void OnId_GheChanged();
    partial void OnId_LoaiGheChanging(System.Nullable<int> value);
    partial void OnId_LoaiGheChanged();
    partial void OnTenGheChanging(string value);
    partial void OnTenGheChanged();
    #endregion
		
		public Ghe()
		{
			this._Phong_Ghes = new EntitySet<Phong_Ghe>(new Action<Phong_Ghe>(this.attach_Phong_Ghes), new Action<Phong_Ghe>(this.detach_Phong_Ghes));
			this._LoaiGhe = default(EntityRef<LoaiGhe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Ghe", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_Ghe
		{
			get
			{
				return this._Id_Ghe;
			}
			set
			{
				if ((this._Id_Ghe != value))
				{
					this.OnId_GheChanging(value);
					this.SendPropertyChanging();
					this._Id_Ghe = value;
					this.SendPropertyChanged("Id_Ghe");
					this.OnId_GheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_LoaiGhe", DbType="Int")]
		public System.Nullable<int> Id_LoaiGhe
		{
			get
			{
				return this._Id_LoaiGhe;
			}
			set
			{
				if ((this._Id_LoaiGhe != value))
				{
					if (this._LoaiGhe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_LoaiGheChanging(value);
					this.SendPropertyChanging();
					this._Id_LoaiGhe = value;
					this.SendPropertyChanged("Id_LoaiGhe");
					this.OnId_LoaiGheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenGhe", DbType="VarChar(50)")]
		public string TenGhe
		{
			get
			{
				return this._TenGhe;
			}
			set
			{
				if ((this._TenGhe != value))
				{
					this.OnTenGheChanging(value);
					this.SendPropertyChanging();
					this._TenGhe = value;
					this.SendPropertyChanged("TenGhe");
					this.OnTenGheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ghe_Phong_Ghe", Storage="_Phong_Ghes", ThisKey="Id_Ghe", OtherKey="Id_Ghe")]
		public EntitySet<Phong_Ghe> Phong_Ghes
		{
			get
			{
				return this._Phong_Ghes;
			}
			set
			{
				this._Phong_Ghes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiGhe_Ghe", Storage="_LoaiGhe", ThisKey="Id_LoaiGhe", OtherKey="Id_LoaiGhe", IsForeignKey=true)]
		public LoaiGhe LoaiGhe
		{
			get
			{
				return this._LoaiGhe.Entity;
			}
			set
			{
				LoaiGhe previousValue = this._LoaiGhe.Entity;
				if (((previousValue != value) 
							|| (this._LoaiGhe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiGhe.Entity = null;
						previousValue.Ghes.Remove(this);
					}
					this._LoaiGhe.Entity = value;
					if ((value != null))
					{
						value.Ghes.Add(this);
						this._Id_LoaiGhe = value.Id_LoaiGhe;
					}
					else
					{
						this._Id_LoaiGhe = default(Nullable<int>);
					}
					this.SendPropertyChanged("LoaiGhe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Phong_Ghes(Phong_Ghe entity)
		{
			this.SendPropertyChanging();
			entity.Ghe = this;
		}
		
		private void detach_Phong_Ghes(Phong_Ghe entity)
		{
			this.SendPropertyChanging();
			entity.Ghe = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LichChieu")]
	public partial class LichChieu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_LichChieu;
		
		private System.Nullable<int> _Id_RapChieu;
		
		private System.Nullable<int> _Id_Phong;
		
		private System.DateTime _NgayChieu;
		
		private System.TimeSpan _GioBatDau;
		
		private System.TimeSpan _GioKetThuc;
		
		private System.Nullable<int> _Id_Phim;
		
		private EntitySet<Ve> _Ves;
		
		private EntityRef<Phong> _Phong;
		
		private EntityRef<Phim> _Phim;
		
		private EntityRef<RapPhim> _RapPhim;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_LichChieuChanging(int value);
    partial void OnId_LichChieuChanged();
    partial void OnId_RapChieuChanging(System.Nullable<int> value);
    partial void OnId_RapChieuChanged();
    partial void OnId_PhongChanging(System.Nullable<int> value);
    partial void OnId_PhongChanged();
    partial void OnNgayChieuChanging(System.DateTime value);
    partial void OnNgayChieuChanged();
    partial void OnGioBatDauChanging(System.TimeSpan value);
    partial void OnGioBatDauChanged();
    partial void OnGioKetThucChanging(System.TimeSpan value);
    partial void OnGioKetThucChanged();
    partial void OnId_PhimChanging(System.Nullable<int> value);
    partial void OnId_PhimChanged();
    #endregion
		
		public LichChieu()
		{
			this._Ves = new EntitySet<Ve>(new Action<Ve>(this.attach_Ves), new Action<Ve>(this.detach_Ves));
			this._Phong = default(EntityRef<Phong>);
			this._Phim = default(EntityRef<Phim>);
			this._RapPhim = default(EntityRef<RapPhim>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_LichChieu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_LichChieu
		{
			get
			{
				return this._Id_LichChieu;
			}
			set
			{
				if ((this._Id_LichChieu != value))
				{
					this.OnId_LichChieuChanging(value);
					this.SendPropertyChanging();
					this._Id_LichChieu = value;
					this.SendPropertyChanged("Id_LichChieu");
					this.OnId_LichChieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_RapChieu", DbType="Int")]
		public System.Nullable<int> Id_RapChieu
		{
			get
			{
				return this._Id_RapChieu;
			}
			set
			{
				if ((this._Id_RapChieu != value))
				{
					if (this._RapPhim.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_RapChieuChanging(value);
					this.SendPropertyChanging();
					this._Id_RapChieu = value;
					this.SendPropertyChanged("Id_RapChieu");
					this.OnId_RapChieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Phong", DbType="Int")]
		public System.Nullable<int> Id_Phong
		{
			get
			{
				return this._Id_Phong;
			}
			set
			{
				if ((this._Id_Phong != value))
				{
					if (this._Phong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_PhongChanging(value);
					this.SendPropertyChanging();
					this._Id_Phong = value;
					this.SendPropertyChanged("Id_Phong");
					this.OnId_PhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayChieu", DbType="DateTime NOT NULL")]
		public System.DateTime NgayChieu
		{
			get
			{
				return this._NgayChieu;
			}
			set
			{
				if ((this._NgayChieu != value))
				{
					this.OnNgayChieuChanging(value);
					this.SendPropertyChanging();
					this._NgayChieu = value;
					this.SendPropertyChanged("NgayChieu");
					this.OnNgayChieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioBatDau", DbType="Time NOT NULL")]
		public System.TimeSpan GioBatDau
		{
			get
			{
				return this._GioBatDau;
			}
			set
			{
				if ((this._GioBatDau != value))
				{
					this.OnGioBatDauChanging(value);
					this.SendPropertyChanging();
					this._GioBatDau = value;
					this.SendPropertyChanged("GioBatDau");
					this.OnGioBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioKetThuc", DbType="Time NOT NULL")]
		public System.TimeSpan GioKetThuc
		{
			get
			{
				return this._GioKetThuc;
			}
			set
			{
				if ((this._GioKetThuc != value))
				{
					this.OnGioKetThucChanging(value);
					this.SendPropertyChanging();
					this._GioKetThuc = value;
					this.SendPropertyChanged("GioKetThuc");
					this.OnGioKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Phim", DbType="Int")]
		public System.Nullable<int> Id_Phim
		{
			get
			{
				return this._Id_Phim;
			}
			set
			{
				if ((this._Id_Phim != value))
				{
					if (this._Phim.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_PhimChanging(value);
					this.SendPropertyChanging();
					this._Id_Phim = value;
					this.SendPropertyChanged("Id_Phim");
					this.OnId_PhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LichChieu_Ve", Storage="_Ves", ThisKey="Id_LichChieu", OtherKey="Id_LichChieu")]
		public EntitySet<Ve> Ves
		{
			get
			{
				return this._Ves;
			}
			set
			{
				this._Ves.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_LichChieu", Storage="_Phong", ThisKey="Id_Phong", OtherKey="Id_Phong", IsForeignKey=true)]
		public Phong Phong
		{
			get
			{
				return this._Phong.Entity;
			}
			set
			{
				Phong previousValue = this._Phong.Entity;
				if (((previousValue != value) 
							|| (this._Phong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Phong.Entity = null;
						previousValue.LichChieus.Remove(this);
					}
					this._Phong.Entity = value;
					if ((value != null))
					{
						value.LichChieus.Add(this);
						this._Id_Phong = value.Id_Phong;
					}
					else
					{
						this._Id_Phong = default(Nullable<int>);
					}
					this.SendPropertyChanged("Phong");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phim_LichChieu", Storage="_Phim", ThisKey="Id_Phim", OtherKey="Id_Phim", IsForeignKey=true)]
		public Phim Phim
		{
			get
			{
				return this._Phim.Entity;
			}
			set
			{
				Phim previousValue = this._Phim.Entity;
				if (((previousValue != value) 
							|| (this._Phim.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Phim.Entity = null;
						previousValue.LichChieus.Remove(this);
					}
					this._Phim.Entity = value;
					if ((value != null))
					{
						value.LichChieus.Add(this);
						this._Id_Phim = value.Id_Phim;
					}
					else
					{
						this._Id_Phim = default(Nullable<int>);
					}
					this.SendPropertyChanged("Phim");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RapPhim_LichChieu", Storage="_RapPhim", ThisKey="Id_RapChieu", OtherKey="Id_RapChieu", IsForeignKey=true)]
		public RapPhim RapPhim
		{
			get
			{
				return this._RapPhim.Entity;
			}
			set
			{
				RapPhim previousValue = this._RapPhim.Entity;
				if (((previousValue != value) 
							|| (this._RapPhim.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RapPhim.Entity = null;
						previousValue.LichChieus.Remove(this);
					}
					this._RapPhim.Entity = value;
					if ((value != null))
					{
						value.LichChieus.Add(this);
						this._Id_RapChieu = value.Id_RapChieu;
					}
					else
					{
						this._Id_RapChieu = default(Nullable<int>);
					}
					this.SendPropertyChanged("RapPhim");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ves(Ve entity)
		{
			this.SendPropertyChanging();
			entity.LichChieu = this;
		}
		
		private void detach_Ves(Ve entity)
		{
			this.SendPropertyChanging();
			entity.LichChieu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiGhe")]
	public partial class LoaiGhe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_LoaiGhe;
		
		private string _TenLoaiGhe;
		
		private double _GiaGhe;
		
		private EntitySet<Ghe> _Ghes;
		
		private EntitySet<Phong> _Phongs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_LoaiGheChanging(int value);
    partial void OnId_LoaiGheChanged();
    partial void OnTenLoaiGheChanging(string value);
    partial void OnTenLoaiGheChanged();
    partial void OnGiaGheChanging(double value);
    partial void OnGiaGheChanged();
    #endregion
		
		public LoaiGhe()
		{
			this._Ghes = new EntitySet<Ghe>(new Action<Ghe>(this.attach_Ghes), new Action<Ghe>(this.detach_Ghes));
			this._Phongs = new EntitySet<Phong>(new Action<Phong>(this.attach_Phongs), new Action<Phong>(this.detach_Phongs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_LoaiGhe", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_LoaiGhe
		{
			get
			{
				return this._Id_LoaiGhe;
			}
			set
			{
				if ((this._Id_LoaiGhe != value))
				{
					this.OnId_LoaiGheChanging(value);
					this.SendPropertyChanging();
					this._Id_LoaiGhe = value;
					this.SendPropertyChanged("Id_LoaiGhe");
					this.OnId_LoaiGheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiGhe", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string TenLoaiGhe
		{
			get
			{
				return this._TenLoaiGhe;
			}
			set
			{
				if ((this._TenLoaiGhe != value))
				{
					this.OnTenLoaiGheChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiGhe = value;
					this.SendPropertyChanged("TenLoaiGhe");
					this.OnTenLoaiGheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaGhe", DbType="Float NOT NULL")]
		public double GiaGhe
		{
			get
			{
				return this._GiaGhe;
			}
			set
			{
				if ((this._GiaGhe != value))
				{
					this.OnGiaGheChanging(value);
					this.SendPropertyChanging();
					this._GiaGhe = value;
					this.SendPropertyChanged("GiaGhe");
					this.OnGiaGheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiGhe_Ghe", Storage="_Ghes", ThisKey="Id_LoaiGhe", OtherKey="Id_LoaiGhe")]
		public EntitySet<Ghe> Ghes
		{
			get
			{
				return this._Ghes;
			}
			set
			{
				this._Ghes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiGhe_Phong", Storage="_Phongs", ThisKey="Id_LoaiGhe", OtherKey="Id_LoaiGhe")]
		public EntitySet<Phong> Phongs
		{
			get
			{
				return this._Phongs;
			}
			set
			{
				this._Phongs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ghes(Ghe entity)
		{
			this.SendPropertyChanging();
			entity.LoaiGhe = this;
		}
		
		private void detach_Ghes(Ghe entity)
		{
			this.SendPropertyChanging();
			entity.LoaiGhe = null;
		}
		
		private void attach_Phongs(Phong entity)
		{
			this.SendPropertyChanging();
			entity.LoaiGhe = this;
		}
		
		private void detach_Phongs(Phong entity)
		{
			this.SendPropertyChanging();
			entity.LoaiGhe = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiPhim")]
	public partial class LoaiPhim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_LoaiPhim;
		
		private string _TenLoai;
		
		private EntitySet<Phim> _Phims;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_LoaiPhimChanging(int value);
    partial void OnId_LoaiPhimChanged();
    partial void OnTenLoaiChanging(string value);
    partial void OnTenLoaiChanged();
    #endregion
		
		public LoaiPhim()
		{
			this._Phims = new EntitySet<Phim>(new Action<Phim>(this.attach_Phims), new Action<Phim>(this.detach_Phims));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_LoaiPhim", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_LoaiPhim
		{
			get
			{
				return this._Id_LoaiPhim;
			}
			set
			{
				if ((this._Id_LoaiPhim != value))
				{
					this.OnId_LoaiPhimChanging(value);
					this.SendPropertyChanging();
					this._Id_LoaiPhim = value;
					this.SendPropertyChanged("Id_LoaiPhim");
					this.OnId_LoaiPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoai", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string TenLoai
		{
			get
			{
				return this._TenLoai;
			}
			set
			{
				if ((this._TenLoai != value))
				{
					this.OnTenLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenLoai = value;
					this.SendPropertyChanged("TenLoai");
					this.OnTenLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiPhim_Phim", Storage="_Phims", ThisKey="Id_LoaiPhim", OtherKey="Id_LoaiPhim")]
		public EntitySet<Phim> Phims
		{
			get
			{
				return this._Phims;
			}
			set
			{
				this._Phims.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Phims(Phim entity)
		{
			this.SendPropertyChanging();
			entity.LoaiPhim = this;
		}
		
		private void detach_Phims(Phim entity)
		{
			this.SendPropertyChanging();
			entity.LoaiPhim = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiPhong")]
	public partial class LoaiPhong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_LoaiPhong;
		
		private string _TenLoaiPhong;
		
		private string _MoTa;
		
		private EntitySet<Phong> _Phongs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_LoaiPhongChanging(int value);
    partial void OnId_LoaiPhongChanged();
    partial void OnTenLoaiPhongChanging(string value);
    partial void OnTenLoaiPhongChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    #endregion
		
		public LoaiPhong()
		{
			this._Phongs = new EntitySet<Phong>(new Action<Phong>(this.attach_Phongs), new Action<Phong>(this.detach_Phongs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_LoaiPhong", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_LoaiPhong
		{
			get
			{
				return this._Id_LoaiPhong;
			}
			set
			{
				if ((this._Id_LoaiPhong != value))
				{
					this.OnId_LoaiPhongChanging(value);
					this.SendPropertyChanging();
					this._Id_LoaiPhong = value;
					this.SendPropertyChanged("Id_LoaiPhong");
					this.OnId_LoaiPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiPhong", DbType="NVarChar(50)")]
		public string TenLoaiPhong
		{
			get
			{
				return this._TenLoaiPhong;
			}
			set
			{
				if ((this._TenLoaiPhong != value))
				{
					this.OnTenLoaiPhongChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiPhong = value;
					this.SendPropertyChanged("TenLoaiPhong");
					this.OnTenLoaiPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(MAX)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiPhong_Phong", Storage="_Phongs", ThisKey="Id_LoaiPhong", OtherKey="Id_LoaiPhong")]
		public EntitySet<Phong> Phongs
		{
			get
			{
				return this._Phongs;
			}
			set
			{
				this._Phongs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Phongs(Phong entity)
		{
			this.SendPropertyChanging();
			entity.LoaiPhong = this;
		}
		
		private void detach_Phongs(Phong entity)
		{
			this.SendPropertyChanging();
			entity.LoaiPhong = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MENU")]
	public partial class MENU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _MenuName;
		
		private string _MenuLink;
		
		private System.Nullable<int> _ParentId;
		
		private System.Nullable<int> _OrderNumber;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMenuNameChanging(string value);
    partial void OnMenuNameChanged();
    partial void OnMenuLinkChanging(string value);
    partial void OnMenuLinkChanged();
    partial void OnParentIdChanging(System.Nullable<int> value);
    partial void OnParentIdChanged();
    partial void OnOrderNumberChanging(System.Nullable<int> value);
    partial void OnOrderNumberChanged();
    #endregion
		
		public MENU()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuName", DbType="NVarChar(50)")]
		public string MenuName
		{
			get
			{
				return this._MenuName;
			}
			set
			{
				if ((this._MenuName != value))
				{
					this.OnMenuNameChanging(value);
					this.SendPropertyChanging();
					this._MenuName = value;
					this.SendPropertyChanged("MenuName");
					this.OnMenuNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuLink", DbType="NVarChar(100)")]
		public string MenuLink
		{
			get
			{
				return this._MenuLink;
			}
			set
			{
				if ((this._MenuLink != value))
				{
					this.OnMenuLinkChanging(value);
					this.SendPropertyChanging();
					this._MenuLink = value;
					this.SendPropertyChanged("MenuLink");
					this.OnMenuLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="Int")]
		public System.Nullable<int> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNumber", DbType="Int")]
		public System.Nullable<int> OrderNumber
		{
			get
			{
				return this._OrderNumber;
			}
			set
			{
				if ((this._OrderNumber != value))
				{
					this.OnOrderNumberChanging(value);
					this.SendPropertyChanging();
					this._OrderNumber = value;
					this.SendPropertyChanged("OrderNumber");
					this.OnOrderNumberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NoiDung")]
	public partial class NoiDung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_NoiDung;
		
		private System.Nullable<int> _Id_BinhLuan;
		
		private System.Nullable<int> _Id_TaiKhoan;
		
		private EntityRef<BinhLuan> _BinhLuan;
		
		private EntityRef<TaiKhoan> _TaiKhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_NoiDungChanging(int value);
    partial void OnId_NoiDungChanged();
    partial void OnId_BinhLuanChanging(System.Nullable<int> value);
    partial void OnId_BinhLuanChanged();
    partial void OnId_TaiKhoanChanging(System.Nullable<int> value);
    partial void OnId_TaiKhoanChanged();
    #endregion
		
		public NoiDung()
		{
			this._BinhLuan = default(EntityRef<BinhLuan>);
			this._TaiKhoan = default(EntityRef<TaiKhoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_NoiDung", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_NoiDung
		{
			get
			{
				return this._Id_NoiDung;
			}
			set
			{
				if ((this._Id_NoiDung != value))
				{
					this.OnId_NoiDungChanging(value);
					this.SendPropertyChanging();
					this._Id_NoiDung = value;
					this.SendPropertyChanged("Id_NoiDung");
					this.OnId_NoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_BinhLuan", DbType="Int")]
		public System.Nullable<int> Id_BinhLuan
		{
			get
			{
				return this._Id_BinhLuan;
			}
			set
			{
				if ((this._Id_BinhLuan != value))
				{
					if (this._BinhLuan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_BinhLuanChanging(value);
					this.SendPropertyChanging();
					this._Id_BinhLuan = value;
					this.SendPropertyChanged("Id_BinhLuan");
					this.OnId_BinhLuanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_TaiKhoan", DbType="Int")]
		public System.Nullable<int> Id_TaiKhoan
		{
			get
			{
				return this._Id_TaiKhoan;
			}
			set
			{
				if ((this._Id_TaiKhoan != value))
				{
					if (this._TaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_TaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._Id_TaiKhoan = value;
					this.SendPropertyChanged("Id_TaiKhoan");
					this.OnId_TaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BinhLuan_NoiDung", Storage="_BinhLuan", ThisKey="Id_BinhLuan", OtherKey="Id_BinhLuan", IsForeignKey=true)]
		public BinhLuan BinhLuan
		{
			get
			{
				return this._BinhLuan.Entity;
			}
			set
			{
				BinhLuan previousValue = this._BinhLuan.Entity;
				if (((previousValue != value) 
							|| (this._BinhLuan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BinhLuan.Entity = null;
						previousValue.NoiDungs.Remove(this);
					}
					this._BinhLuan.Entity = value;
					if ((value != null))
					{
						value.NoiDungs.Add(this);
						this._Id_BinhLuan = value.Id_BinhLuan;
					}
					else
					{
						this._Id_BinhLuan = default(Nullable<int>);
					}
					this.SendPropertyChanged("BinhLuan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_NoiDung", Storage="_TaiKhoan", ThisKey="Id_TaiKhoan", OtherKey="Id_TaiKhoan", IsForeignKey=true)]
		public TaiKhoan TaiKhoan
		{
			get
			{
				return this._TaiKhoan.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan.Entity = null;
						previousValue.NoiDungs.Remove(this);
					}
					this._TaiKhoan.Entity = value;
					if ((value != null))
					{
						value.NoiDungs.Add(this);
						this._Id_TaiKhoan = value.Id_TaiKhoan;
					}
					else
					{
						this._Id_TaiKhoan = default(Nullable<int>);
					}
					this.SendPropertyChanged("TaiKhoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Phong")]
	public partial class Phong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Phong;
		
		private System.Nullable<int> _Id_RapChieu;
		
		private string _TenPhong;
		
		private int _SoLuong;
		
		private bool _TinhTrang;
		
		private System.Nullable<int> _Id_LoaiPhong;
		
		private System.Nullable<int> _Id_LoaiGhe;
		
		private EntitySet<LichChieu> _LichChieus;
		
		private EntitySet<Phong_Ghe> _Phong_Ghes;
		
		private EntityRef<LoaiGhe> _LoaiGhe;
		
		private EntityRef<LoaiPhong> _LoaiPhong;
		
		private EntityRef<RapPhim> _RapPhim;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_PhongChanging(int value);
    partial void OnId_PhongChanged();
    partial void OnId_RapChieuChanging(System.Nullable<int> value);
    partial void OnId_RapChieuChanged();
    partial void OnTenPhongChanging(string value);
    partial void OnTenPhongChanged();
    partial void OnSoLuongChanging(int value);
    partial void OnSoLuongChanged();
    partial void OnTinhTrangChanging(bool value);
    partial void OnTinhTrangChanged();
    partial void OnId_LoaiPhongChanging(System.Nullable<int> value);
    partial void OnId_LoaiPhongChanged();
    partial void OnId_LoaiGheChanging(System.Nullable<int> value);
    partial void OnId_LoaiGheChanged();
    #endregion
		
		public Phong()
		{
			this._LichChieus = new EntitySet<LichChieu>(new Action<LichChieu>(this.attach_LichChieus), new Action<LichChieu>(this.detach_LichChieus));
			this._Phong_Ghes = new EntitySet<Phong_Ghe>(new Action<Phong_Ghe>(this.attach_Phong_Ghes), new Action<Phong_Ghe>(this.detach_Phong_Ghes));
			this._LoaiGhe = default(EntityRef<LoaiGhe>);
			this._LoaiPhong = default(EntityRef<LoaiPhong>);
			this._RapPhim = default(EntityRef<RapPhim>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Phong", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_Phong
		{
			get
			{
				return this._Id_Phong;
			}
			set
			{
				if ((this._Id_Phong != value))
				{
					this.OnId_PhongChanging(value);
					this.SendPropertyChanging();
					this._Id_Phong = value;
					this.SendPropertyChanged("Id_Phong");
					this.OnId_PhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_RapChieu", DbType="Int")]
		public System.Nullable<int> Id_RapChieu
		{
			get
			{
				return this._Id_RapChieu;
			}
			set
			{
				if ((this._Id_RapChieu != value))
				{
					if (this._RapPhim.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_RapChieuChanging(value);
					this.SendPropertyChanging();
					this._Id_RapChieu = value;
					this.SendPropertyChanged("Id_RapChieu");
					this.OnId_RapChieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPhong", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string TenPhong
		{
			get
			{
				return this._TenPhong;
			}
			set
			{
				if ((this._TenPhong != value))
				{
					this.OnTenPhongChanging(value);
					this.SendPropertyChanging();
					this._TenPhong = value;
					this.SendPropertyChanged("TenPhong");
					this.OnTenPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int NOT NULL")]
		public int SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="Bit NOT NULL")]
		public bool TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_LoaiPhong", DbType="Int")]
		public System.Nullable<int> Id_LoaiPhong
		{
			get
			{
				return this._Id_LoaiPhong;
			}
			set
			{
				if ((this._Id_LoaiPhong != value))
				{
					if (this._LoaiPhong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_LoaiPhongChanging(value);
					this.SendPropertyChanging();
					this._Id_LoaiPhong = value;
					this.SendPropertyChanged("Id_LoaiPhong");
					this.OnId_LoaiPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_LoaiGhe", DbType="Int")]
		public System.Nullable<int> Id_LoaiGhe
		{
			get
			{
				return this._Id_LoaiGhe;
			}
			set
			{
				if ((this._Id_LoaiGhe != value))
				{
					if (this._LoaiGhe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_LoaiGheChanging(value);
					this.SendPropertyChanging();
					this._Id_LoaiGhe = value;
					this.SendPropertyChanged("Id_LoaiGhe");
					this.OnId_LoaiGheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_LichChieu", Storage="_LichChieus", ThisKey="Id_Phong", OtherKey="Id_Phong")]
		public EntitySet<LichChieu> LichChieus
		{
			get
			{
				return this._LichChieus;
			}
			set
			{
				this._LichChieus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_Phong_Ghe", Storage="_Phong_Ghes", ThisKey="Id_Phong", OtherKey="Id_Phong")]
		public EntitySet<Phong_Ghe> Phong_Ghes
		{
			get
			{
				return this._Phong_Ghes;
			}
			set
			{
				this._Phong_Ghes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiGhe_Phong", Storage="_LoaiGhe", ThisKey="Id_LoaiGhe", OtherKey="Id_LoaiGhe", IsForeignKey=true)]
		public LoaiGhe LoaiGhe
		{
			get
			{
				return this._LoaiGhe.Entity;
			}
			set
			{
				LoaiGhe previousValue = this._LoaiGhe.Entity;
				if (((previousValue != value) 
							|| (this._LoaiGhe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiGhe.Entity = null;
						previousValue.Phongs.Remove(this);
					}
					this._LoaiGhe.Entity = value;
					if ((value != null))
					{
						value.Phongs.Add(this);
						this._Id_LoaiGhe = value.Id_LoaiGhe;
					}
					else
					{
						this._Id_LoaiGhe = default(Nullable<int>);
					}
					this.SendPropertyChanged("LoaiGhe");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiPhong_Phong", Storage="_LoaiPhong", ThisKey="Id_LoaiPhong", OtherKey="Id_LoaiPhong", IsForeignKey=true)]
		public LoaiPhong LoaiPhong
		{
			get
			{
				return this._LoaiPhong.Entity;
			}
			set
			{
				LoaiPhong previousValue = this._LoaiPhong.Entity;
				if (((previousValue != value) 
							|| (this._LoaiPhong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiPhong.Entity = null;
						previousValue.Phongs.Remove(this);
					}
					this._LoaiPhong.Entity = value;
					if ((value != null))
					{
						value.Phongs.Add(this);
						this._Id_LoaiPhong = value.Id_LoaiPhong;
					}
					else
					{
						this._Id_LoaiPhong = default(Nullable<int>);
					}
					this.SendPropertyChanged("LoaiPhong");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RapPhim_Phong", Storage="_RapPhim", ThisKey="Id_RapChieu", OtherKey="Id_RapChieu", IsForeignKey=true)]
		public RapPhim RapPhim
		{
			get
			{
				return this._RapPhim.Entity;
			}
			set
			{
				RapPhim previousValue = this._RapPhim.Entity;
				if (((previousValue != value) 
							|| (this._RapPhim.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RapPhim.Entity = null;
						previousValue.Phongs.Remove(this);
					}
					this._RapPhim.Entity = value;
					if ((value != null))
					{
						value.Phongs.Add(this);
						this._Id_RapChieu = value.Id_RapChieu;
					}
					else
					{
						this._Id_RapChieu = default(Nullable<int>);
					}
					this.SendPropertyChanged("RapPhim");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LichChieus(LichChieu entity)
		{
			this.SendPropertyChanging();
			entity.Phong = this;
		}
		
		private void detach_LichChieus(LichChieu entity)
		{
			this.SendPropertyChanging();
			entity.Phong = null;
		}
		
		private void attach_Phong_Ghes(Phong_Ghe entity)
		{
			this.SendPropertyChanging();
			entity.Phong = this;
		}
		
		private void detach_Phong_Ghes(Phong_Ghe entity)
		{
			this.SendPropertyChanging();
			entity.Phong = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Phim")]
	public partial class Phim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Phim;
		
		private string _TenPhim;
		
		private string _AnhPhim;
		
		private int _ThoiLuong;
		
		private string _MoTa;
		
		private bool _TinhTrang;
		
		private int _Id_LoaiPhim;
		
		private System.Nullable<int> _Id_DanhMuc;
		
		private string _DienVien;
		
		private string _DaoDien;
		
		private System.DateTime _NgayCongChieu;
		
		private System.DateTime _NgayKetThuc;
		
		private string _NamPhatHanh;
		
		private string _ChatLuong;
		
		private System.Nullable<double> _DanhGia;
		
		private System.Nullable<System.DateTime> _NgayCapNhat;
		
		private EntitySet<BinhLuan> _BinhLuans;
		
		private EntitySet<LichChieu> _LichChieus;
		
		private EntitySet<Slider> _Sliders;
		
		private EntityRef<DanhMuc> _DanhMuc;
		
		private EntityRef<LoaiPhim> _LoaiPhim;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_PhimChanging(int value);
    partial void OnId_PhimChanged();
    partial void OnTenPhimChanging(string value);
    partial void OnTenPhimChanged();
    partial void OnAnhPhimChanging(string value);
    partial void OnAnhPhimChanged();
    partial void OnThoiLuongChanging(int value);
    partial void OnThoiLuongChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnTinhTrangChanging(bool value);
    partial void OnTinhTrangChanged();
    partial void OnId_LoaiPhimChanging(int value);
    partial void OnId_LoaiPhimChanged();
    partial void OnId_DanhMucChanging(System.Nullable<int> value);
    partial void OnId_DanhMucChanged();
    partial void OnDienVienChanging(string value);
    partial void OnDienVienChanged();
    partial void OnDaoDienChanging(string value);
    partial void OnDaoDienChanged();
    partial void OnNgayCongChieuChanging(System.DateTime value);
    partial void OnNgayCongChieuChanged();
    partial void OnNgayKetThucChanging(System.DateTime value);
    partial void OnNgayKetThucChanged();
    partial void OnNamPhatHanhChanging(string value);
    partial void OnNamPhatHanhChanged();
    partial void OnChatLuongChanging(string value);
    partial void OnChatLuongChanged();
    partial void OnDanhGiaChanging(System.Nullable<double> value);
    partial void OnDanhGiaChanged();
    partial void OnNgayCapNhatChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayCapNhatChanged();
    #endregion
		
		public Phim()
		{
			this._BinhLuans = new EntitySet<BinhLuan>(new Action<BinhLuan>(this.attach_BinhLuans), new Action<BinhLuan>(this.detach_BinhLuans));
			this._LichChieus = new EntitySet<LichChieu>(new Action<LichChieu>(this.attach_LichChieus), new Action<LichChieu>(this.detach_LichChieus));
			this._Sliders = new EntitySet<Slider>(new Action<Slider>(this.attach_Sliders), new Action<Slider>(this.detach_Sliders));
			this._DanhMuc = default(EntityRef<DanhMuc>);
			this._LoaiPhim = default(EntityRef<LoaiPhim>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Phim", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_Phim
		{
			get
			{
				return this._Id_Phim;
			}
			set
			{
				if ((this._Id_Phim != value))
				{
					this.OnId_PhimChanging(value);
					this.SendPropertyChanging();
					this._Id_Phim = value;
					this.SendPropertyChanged("Id_Phim");
					this.OnId_PhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPhim", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string TenPhim
		{
			get
			{
				return this._TenPhim;
			}
			set
			{
				if ((this._TenPhim != value))
				{
					this.OnTenPhimChanging(value);
					this.SendPropertyChanging();
					this._TenPhim = value;
					this.SendPropertyChanged("TenPhim");
					this.OnTenPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnhPhim", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string AnhPhim
		{
			get
			{
				return this._AnhPhim;
			}
			set
			{
				if ((this._AnhPhim != value))
				{
					this.OnAnhPhimChanging(value);
					this.SendPropertyChanging();
					this._AnhPhim = value;
					this.SendPropertyChanged("AnhPhim");
					this.OnAnhPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiLuong", DbType="Int NOT NULL")]
		public int ThoiLuong
		{
			get
			{
				return this._ThoiLuong;
			}
			set
			{
				if ((this._ThoiLuong != value))
				{
					this.OnThoiLuongChanging(value);
					this.SendPropertyChanging();
					this._ThoiLuong = value;
					this.SendPropertyChanged("ThoiLuong");
					this.OnThoiLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(MAX)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="Bit NOT NULL")]
		public bool TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_LoaiPhim", DbType="Int NOT NULL")]
		public int Id_LoaiPhim
		{
			get
			{
				return this._Id_LoaiPhim;
			}
			set
			{
				if ((this._Id_LoaiPhim != value))
				{
					if (this._LoaiPhim.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_LoaiPhimChanging(value);
					this.SendPropertyChanging();
					this._Id_LoaiPhim = value;
					this.SendPropertyChanged("Id_LoaiPhim");
					this.OnId_LoaiPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_DanhMuc", DbType="Int")]
		public System.Nullable<int> Id_DanhMuc
		{
			get
			{
				return this._Id_DanhMuc;
			}
			set
			{
				if ((this._Id_DanhMuc != value))
				{
					if (this._DanhMuc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_DanhMucChanging(value);
					this.SendPropertyChanging();
					this._Id_DanhMuc = value;
					this.SendPropertyChanged("Id_DanhMuc");
					this.OnId_DanhMucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienVien", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DienVien
		{
			get
			{
				return this._DienVien;
			}
			set
			{
				if ((this._DienVien != value))
				{
					this.OnDienVienChanging(value);
					this.SendPropertyChanging();
					this._DienVien = value;
					this.SendPropertyChanged("DienVien");
					this.OnDienVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaoDien", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DaoDien
		{
			get
			{
				return this._DaoDien;
			}
			set
			{
				if ((this._DaoDien != value))
				{
					this.OnDaoDienChanging(value);
					this.SendPropertyChanging();
					this._DaoDien = value;
					this.SendPropertyChanged("DaoDien");
					this.OnDaoDienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayCongChieu", DbType="DateTime NOT NULL")]
		public System.DateTime NgayCongChieu
		{
			get
			{
				return this._NgayCongChieu;
			}
			set
			{
				if ((this._NgayCongChieu != value))
				{
					this.OnNgayCongChieuChanging(value);
					this.SendPropertyChanging();
					this._NgayCongChieu = value;
					this.SendPropertyChanged("NgayCongChieu");
					this.OnNgayCongChieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayKetThuc", DbType="DateTime NOT NULL")]
		public System.DateTime NgayKetThuc
		{
			get
			{
				return this._NgayKetThuc;
			}
			set
			{
				if ((this._NgayKetThuc != value))
				{
					this.OnNgayKetThucChanging(value);
					this.SendPropertyChanging();
					this._NgayKetThuc = value;
					this.SendPropertyChanged("NgayKetThuc");
					this.OnNgayKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamPhatHanh", DbType="VarChar(50)")]
		public string NamPhatHanh
		{
			get
			{
				return this._NamPhatHanh;
			}
			set
			{
				if ((this._NamPhatHanh != value))
				{
					this.OnNamPhatHanhChanging(value);
					this.SendPropertyChanging();
					this._NamPhatHanh = value;
					this.SendPropertyChanged("NamPhatHanh");
					this.OnNamPhatHanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatLuong", DbType="VarChar(50)")]
		public string ChatLuong
		{
			get
			{
				return this._ChatLuong;
			}
			set
			{
				if ((this._ChatLuong != value))
				{
					this.OnChatLuongChanging(value);
					this.SendPropertyChanging();
					this._ChatLuong = value;
					this.SendPropertyChanged("ChatLuong");
					this.OnChatLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DanhGia", DbType="Float")]
		public System.Nullable<double> DanhGia
		{
			get
			{
				return this._DanhGia;
			}
			set
			{
				if ((this._DanhGia != value))
				{
					this.OnDanhGiaChanging(value);
					this.SendPropertyChanging();
					this._DanhGia = value;
					this.SendPropertyChanged("DanhGia");
					this.OnDanhGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayCapNhat", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayCapNhat
		{
			get
			{
				return this._NgayCapNhat;
			}
			set
			{
				if ((this._NgayCapNhat != value))
				{
					this.OnNgayCapNhatChanging(value);
					this.SendPropertyChanging();
					this._NgayCapNhat = value;
					this.SendPropertyChanged("NgayCapNhat");
					this.OnNgayCapNhatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phim_BinhLuan", Storage="_BinhLuans", ThisKey="Id_Phim", OtherKey="Id_Phim")]
		public EntitySet<BinhLuan> BinhLuans
		{
			get
			{
				return this._BinhLuans;
			}
			set
			{
				this._BinhLuans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phim_LichChieu", Storage="_LichChieus", ThisKey="Id_Phim", OtherKey="Id_Phim")]
		public EntitySet<LichChieu> LichChieus
		{
			get
			{
				return this._LichChieus;
			}
			set
			{
				this._LichChieus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phim_Slider", Storage="_Sliders", ThisKey="Id_Phim", OtherKey="Id_Phim")]
		public EntitySet<Slider> Sliders
		{
			get
			{
				return this._Sliders;
			}
			set
			{
				this._Sliders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMuc_Phim", Storage="_DanhMuc", ThisKey="Id_DanhMuc", OtherKey="Id_DanhMuc", IsForeignKey=true)]
		public DanhMuc DanhMuc
		{
			get
			{
				return this._DanhMuc.Entity;
			}
			set
			{
				DanhMuc previousValue = this._DanhMuc.Entity;
				if (((previousValue != value) 
							|| (this._DanhMuc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DanhMuc.Entity = null;
						previousValue.Phims.Remove(this);
					}
					this._DanhMuc.Entity = value;
					if ((value != null))
					{
						value.Phims.Add(this);
						this._Id_DanhMuc = value.Id_DanhMuc;
					}
					else
					{
						this._Id_DanhMuc = default(Nullable<int>);
					}
					this.SendPropertyChanged("DanhMuc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiPhim_Phim", Storage="_LoaiPhim", ThisKey="Id_LoaiPhim", OtherKey="Id_LoaiPhim", IsForeignKey=true)]
		public LoaiPhim LoaiPhim
		{
			get
			{
				return this._LoaiPhim.Entity;
			}
			set
			{
				LoaiPhim previousValue = this._LoaiPhim.Entity;
				if (((previousValue != value) 
							|| (this._LoaiPhim.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiPhim.Entity = null;
						previousValue.Phims.Remove(this);
					}
					this._LoaiPhim.Entity = value;
					if ((value != null))
					{
						value.Phims.Add(this);
						this._Id_LoaiPhim = value.Id_LoaiPhim;
					}
					else
					{
						this._Id_LoaiPhim = default(int);
					}
					this.SendPropertyChanged("LoaiPhim");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BinhLuans(BinhLuan entity)
		{
			this.SendPropertyChanging();
			entity.Phim = this;
		}
		
		private void detach_BinhLuans(BinhLuan entity)
		{
			this.SendPropertyChanging();
			entity.Phim = null;
		}
		
		private void attach_LichChieus(LichChieu entity)
		{
			this.SendPropertyChanging();
			entity.Phim = this;
		}
		
		private void detach_LichChieus(LichChieu entity)
		{
			this.SendPropertyChanging();
			entity.Phim = null;
		}
		
		private void attach_Sliders(Slider entity)
		{
			this.SendPropertyChanging();
			entity.Phim = this;
		}
		
		private void detach_Sliders(Slider entity)
		{
			this.SendPropertyChanging();
			entity.Phim = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Phong_Ghe")]
	public partial class Phong_Ghe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<int> _Id_Phong;
		
		private System.Nullable<int> _Id_Ghe;
		
		private System.Nullable<bool> _TinhTrang;
		
		private EntityRef<Ghe> _Ghe;
		
		private EntityRef<Phong> _Phong;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnId_PhongChanging(System.Nullable<int> value);
    partial void OnId_PhongChanged();
    partial void OnId_GheChanging(System.Nullable<int> value);
    partial void OnId_GheChanged();
    partial void OnTinhTrangChanging(System.Nullable<bool> value);
    partial void OnTinhTrangChanged();
    #endregion
		
		public Phong_Ghe()
		{
			this._Ghe = default(EntityRef<Ghe>);
			this._Phong = default(EntityRef<Phong>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Phong", DbType="Int")]
		public System.Nullable<int> Id_Phong
		{
			get
			{
				return this._Id_Phong;
			}
			set
			{
				if ((this._Id_Phong != value))
				{
					if (this._Phong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_PhongChanging(value);
					this.SendPropertyChanging();
					this._Id_Phong = value;
					this.SendPropertyChanged("Id_Phong");
					this.OnId_PhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Ghe", DbType="Int")]
		public System.Nullable<int> Id_Ghe
		{
			get
			{
				return this._Id_Ghe;
			}
			set
			{
				if ((this._Id_Ghe != value))
				{
					if (this._Ghe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_GheChanging(value);
					this.SendPropertyChanging();
					this._Id_Ghe = value;
					this.SendPropertyChanged("Id_Ghe");
					this.OnId_GheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="Bit")]
		public System.Nullable<bool> TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ghe_Phong_Ghe", Storage="_Ghe", ThisKey="Id_Ghe", OtherKey="Id_Ghe", IsForeignKey=true)]
		public Ghe Ghe
		{
			get
			{
				return this._Ghe.Entity;
			}
			set
			{
				Ghe previousValue = this._Ghe.Entity;
				if (((previousValue != value) 
							|| (this._Ghe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ghe.Entity = null;
						previousValue.Phong_Ghes.Remove(this);
					}
					this._Ghe.Entity = value;
					if ((value != null))
					{
						value.Phong_Ghes.Add(this);
						this._Id_Ghe = value.Id_Ghe;
					}
					else
					{
						this._Id_Ghe = default(Nullable<int>);
					}
					this.SendPropertyChanged("Ghe");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_Phong_Ghe", Storage="_Phong", ThisKey="Id_Phong", OtherKey="Id_Phong", IsForeignKey=true)]
		public Phong Phong
		{
			get
			{
				return this._Phong.Entity;
			}
			set
			{
				Phong previousValue = this._Phong.Entity;
				if (((previousValue != value) 
							|| (this._Phong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Phong.Entity = null;
						previousValue.Phong_Ghes.Remove(this);
					}
					this._Phong.Entity = value;
					if ((value != null))
					{
						value.Phong_Ghes.Add(this);
						this._Id_Phong = value.Id_Phong;
					}
					else
					{
						this._Id_Phong = default(Nullable<int>);
					}
					this.SendPropertyChanged("Phong");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RapPhim")]
	public partial class RapPhim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_RapChieu;
		
		private string _TenRapChieu;
		
		private int _TongSoPhong;
		
		private string _ThanhPho;
		
		private string _QuanHuyen;
		
		private string _PhuongXa;
		
		private System.Nullable<System.TimeSpan> _GioMoCua;
		
		private System.Nullable<System.TimeSpan> _GioDongCua;
		
		private EntitySet<LichChieu> _LichChieus;
		
		private EntitySet<Phong> _Phongs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_RapChieuChanging(int value);
    partial void OnId_RapChieuChanged();
    partial void OnTenRapChieuChanging(string value);
    partial void OnTenRapChieuChanged();
    partial void OnTongSoPhongChanging(int value);
    partial void OnTongSoPhongChanged();
    partial void OnThanhPhoChanging(string value);
    partial void OnThanhPhoChanged();
    partial void OnQuanHuyenChanging(string value);
    partial void OnQuanHuyenChanged();
    partial void OnPhuongXaChanging(string value);
    partial void OnPhuongXaChanged();
    partial void OnGioMoCuaChanging(System.Nullable<System.TimeSpan> value);
    partial void OnGioMoCuaChanged();
    partial void OnGioDongCuaChanging(System.Nullable<System.TimeSpan> value);
    partial void OnGioDongCuaChanged();
    #endregion
		
		public RapPhim()
		{
			this._LichChieus = new EntitySet<LichChieu>(new Action<LichChieu>(this.attach_LichChieus), new Action<LichChieu>(this.detach_LichChieus));
			this._Phongs = new EntitySet<Phong>(new Action<Phong>(this.attach_Phongs), new Action<Phong>(this.detach_Phongs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_RapChieu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_RapChieu
		{
			get
			{
				return this._Id_RapChieu;
			}
			set
			{
				if ((this._Id_RapChieu != value))
				{
					this.OnId_RapChieuChanging(value);
					this.SendPropertyChanging();
					this._Id_RapChieu = value;
					this.SendPropertyChanged("Id_RapChieu");
					this.OnId_RapChieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenRapChieu", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenRapChieu
		{
			get
			{
				return this._TenRapChieu;
			}
			set
			{
				if ((this._TenRapChieu != value))
				{
					this.OnTenRapChieuChanging(value);
					this.SendPropertyChanging();
					this._TenRapChieu = value;
					this.SendPropertyChanged("TenRapChieu");
					this.OnTenRapChieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongSoPhong", DbType="Int NOT NULL")]
		public int TongSoPhong
		{
			get
			{
				return this._TongSoPhong;
			}
			set
			{
				if ((this._TongSoPhong != value))
				{
					this.OnTongSoPhongChanging(value);
					this.SendPropertyChanging();
					this._TongSoPhong = value;
					this.SendPropertyChanged("TongSoPhong");
					this.OnTongSoPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhPho", DbType="NVarChar(MAX)")]
		public string ThanhPho
		{
			get
			{
				return this._ThanhPho;
			}
			set
			{
				if ((this._ThanhPho != value))
				{
					this.OnThanhPhoChanging(value);
					this.SendPropertyChanging();
					this._ThanhPho = value;
					this.SendPropertyChanged("ThanhPho");
					this.OnThanhPhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuanHuyen", DbType="NVarChar(MAX)")]
		public string QuanHuyen
		{
			get
			{
				return this._QuanHuyen;
			}
			set
			{
				if ((this._QuanHuyen != value))
				{
					this.OnQuanHuyenChanging(value);
					this.SendPropertyChanging();
					this._QuanHuyen = value;
					this.SendPropertyChanged("QuanHuyen");
					this.OnQuanHuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhuongXa", DbType="NVarChar(MAX)")]
		public string PhuongXa
		{
			get
			{
				return this._PhuongXa;
			}
			set
			{
				if ((this._PhuongXa != value))
				{
					this.OnPhuongXaChanging(value);
					this.SendPropertyChanging();
					this._PhuongXa = value;
					this.SendPropertyChanged("PhuongXa");
					this.OnPhuongXaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioMoCua", DbType="Time")]
		public System.Nullable<System.TimeSpan> GioMoCua
		{
			get
			{
				return this._GioMoCua;
			}
			set
			{
				if ((this._GioMoCua != value))
				{
					this.OnGioMoCuaChanging(value);
					this.SendPropertyChanging();
					this._GioMoCua = value;
					this.SendPropertyChanged("GioMoCua");
					this.OnGioMoCuaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioDongCua", DbType="Time")]
		public System.Nullable<System.TimeSpan> GioDongCua
		{
			get
			{
				return this._GioDongCua;
			}
			set
			{
				if ((this._GioDongCua != value))
				{
					this.OnGioDongCuaChanging(value);
					this.SendPropertyChanging();
					this._GioDongCua = value;
					this.SendPropertyChanged("GioDongCua");
					this.OnGioDongCuaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RapPhim_LichChieu", Storage="_LichChieus", ThisKey="Id_RapChieu", OtherKey="Id_RapChieu")]
		public EntitySet<LichChieu> LichChieus
		{
			get
			{
				return this._LichChieus;
			}
			set
			{
				this._LichChieus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RapPhim_Phong", Storage="_Phongs", ThisKey="Id_RapChieu", OtherKey="Id_RapChieu")]
		public EntitySet<Phong> Phongs
		{
			get
			{
				return this._Phongs;
			}
			set
			{
				this._Phongs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LichChieus(LichChieu entity)
		{
			this.SendPropertyChanging();
			entity.RapPhim = this;
		}
		
		private void detach_LichChieus(LichChieu entity)
		{
			this.SendPropertyChanging();
			entity.RapPhim = null;
		}
		
		private void attach_Phongs(Phong entity)
		{
			this.SendPropertyChanging();
			entity.RapPhim = this;
		}
		
		private void detach_Phongs(Phong entity)
		{
			this.SendPropertyChanging();
			entity.RapPhim = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaiKhoan")]
	public partial class TaiKhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_TaiKhoan;
		
		private string _TenDangNhap;
		
		private string _MatKhau;
		
		private System.Nullable<System.DateTime> _NgayDangKy;
		
		private System.Nullable<bool> _TinhTrang;
		
		private string _PhanQuyen;
		
		private System.Nullable<int> _Id_ThongTin;
		
		private EntitySet<NoiDung> _NoiDungs;
		
		private EntitySet<Ve> _Ves;
		
		private EntityRef<ThongTin> _ThongTin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_TaiKhoanChanging(int value);
    partial void OnId_TaiKhoanChanged();
    partial void OnTenDangNhapChanging(string value);
    partial void OnTenDangNhapChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnNgayDangKyChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDangKyChanged();
    partial void OnTinhTrangChanging(System.Nullable<bool> value);
    partial void OnTinhTrangChanged();
    partial void OnPhanQuyenChanging(string value);
    partial void OnPhanQuyenChanged();
    partial void OnId_ThongTinChanging(System.Nullable<int> value);
    partial void OnId_ThongTinChanged();
    #endregion
		
		public TaiKhoan()
		{
			this._NoiDungs = new EntitySet<NoiDung>(new Action<NoiDung>(this.attach_NoiDungs), new Action<NoiDung>(this.detach_NoiDungs));
			this._Ves = new EntitySet<Ve>(new Action<Ve>(this.attach_Ves), new Action<Ve>(this.detach_Ves));
			this._ThongTin = default(EntityRef<ThongTin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_TaiKhoan", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_TaiKhoan
		{
			get
			{
				return this._Id_TaiKhoan;
			}
			set
			{
				if ((this._Id_TaiKhoan != value))
				{
					this.OnId_TaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._Id_TaiKhoan = value;
					this.SendPropertyChanged("Id_TaiKhoan");
					this.OnId_TaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDangNhap", DbType="NVarChar(MAX)")]
		public string TenDangNhap
		{
			get
			{
				return this._TenDangNhap;
			}
			set
			{
				if ((this._TenDangNhap != value))
				{
					this.OnTenDangNhapChanging(value);
					this.SendPropertyChanging();
					this._TenDangNhap = value;
					this.SendPropertyChanged("TenDangNhap");
					this.OnTenDangNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="NVarChar(60)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDangKy", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayDangKy
		{
			get
			{
				return this._NgayDangKy;
			}
			set
			{
				if ((this._NgayDangKy != value))
				{
					this.OnNgayDangKyChanging(value);
					this.SendPropertyChanging();
					this._NgayDangKy = value;
					this.SendPropertyChanged("NgayDangKy");
					this.OnNgayDangKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="Bit")]
		public System.Nullable<bool> TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhanQuyen", DbType="VarChar(50)")]
		public string PhanQuyen
		{
			get
			{
				return this._PhanQuyen;
			}
			set
			{
				if ((this._PhanQuyen != value))
				{
					this.OnPhanQuyenChanging(value);
					this.SendPropertyChanging();
					this._PhanQuyen = value;
					this.SendPropertyChanged("PhanQuyen");
					this.OnPhanQuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_ThongTin", DbType="Int")]
		public System.Nullable<int> Id_ThongTin
		{
			get
			{
				return this._Id_ThongTin;
			}
			set
			{
				if ((this._Id_ThongTin != value))
				{
					if (this._ThongTin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_ThongTinChanging(value);
					this.SendPropertyChanging();
					this._Id_ThongTin = value;
					this.SendPropertyChanged("Id_ThongTin");
					this.OnId_ThongTinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_NoiDung", Storage="_NoiDungs", ThisKey="Id_TaiKhoan", OtherKey="Id_TaiKhoan")]
		public EntitySet<NoiDung> NoiDungs
		{
			get
			{
				return this._NoiDungs;
			}
			set
			{
				this._NoiDungs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_Ve", Storage="_Ves", ThisKey="Id_TaiKhoan", OtherKey="Id_TaiKhoan")]
		public EntitySet<Ve> Ves
		{
			get
			{
				return this._Ves;
			}
			set
			{
				this._Ves.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThongTin_TaiKhoan", Storage="_ThongTin", ThisKey="Id_ThongTin", OtherKey="Id_ThongTin", IsForeignKey=true)]
		public ThongTin ThongTin
		{
			get
			{
				return this._ThongTin.Entity;
			}
			set
			{
				ThongTin previousValue = this._ThongTin.Entity;
				if (((previousValue != value) 
							|| (this._ThongTin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThongTin.Entity = null;
						previousValue.TaiKhoans.Remove(this);
					}
					this._ThongTin.Entity = value;
					if ((value != null))
					{
						value.TaiKhoans.Add(this);
						this._Id_ThongTin = value.Id_ThongTin;
					}
					else
					{
						this._Id_ThongTin = default(Nullable<int>);
					}
					this.SendPropertyChanged("ThongTin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NoiDungs(NoiDung entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = this;
		}
		
		private void detach_NoiDungs(NoiDung entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = null;
		}
		
		private void attach_Ves(Ve entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = this;
		}
		
		private void detach_Ves(Ve entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThongTin")]
	public partial class ThongTin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_ThongTin;
		
		private string _TenNguoiDung;
		
		private System.Nullable<bool> _GioiTinh;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _DiaChi;
		
		private string _Email;
		
		private System.Nullable<System.DateTime> _NgayCapNhat;
		
		private EntitySet<TaiKhoan> _TaiKhoans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_ThongTinChanging(int value);
    partial void OnId_ThongTinChanged();
    partial void OnTenNguoiDungChanging(string value);
    partial void OnTenNguoiDungChanged();
    partial void OnGioiTinhChanging(System.Nullable<bool> value);
    partial void OnGioiTinhChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnNgayCapNhatChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayCapNhatChanged();
    #endregion
		
		public ThongTin()
		{
			this._TaiKhoans = new EntitySet<TaiKhoan>(new Action<TaiKhoan>(this.attach_TaiKhoans), new Action<TaiKhoan>(this.detach_TaiKhoans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_ThongTin", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_ThongTin
		{
			get
			{
				return this._Id_ThongTin;
			}
			set
			{
				if ((this._Id_ThongTin != value))
				{
					this.OnId_ThongTinChanging(value);
					this.SendPropertyChanging();
					this._Id_ThongTin = value;
					this.SendPropertyChanged("Id_ThongTin");
					this.OnId_ThongTinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNguoiDung", DbType="NVarChar(MAX)")]
		public string TenNguoiDung
		{
			get
			{
				return this._TenNguoiDung;
			}
			set
			{
				if ((this._TenNguoiDung != value))
				{
					this.OnTenNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._TenNguoiDung = value;
					this.SendPropertyChanged("TenNguoiDung");
					this.OnTenNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="Bit")]
		public System.Nullable<bool> GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(MAX)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayCapNhat", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayCapNhat
		{
			get
			{
				return this._NgayCapNhat;
			}
			set
			{
				if ((this._NgayCapNhat != value))
				{
					this.OnNgayCapNhatChanging(value);
					this.SendPropertyChanging();
					this._NgayCapNhat = value;
					this.SendPropertyChanged("NgayCapNhat");
					this.OnNgayCapNhatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThongTin_TaiKhoan", Storage="_TaiKhoans", ThisKey="Id_ThongTin", OtherKey="Id_ThongTin")]
		public EntitySet<TaiKhoan> TaiKhoans
		{
			get
			{
				return this._TaiKhoans;
			}
			set
			{
				this._TaiKhoans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.ThongTin = this;
		}
		
		private void detach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.ThongTin = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRANGTIN")]
	public partial class TRANGTIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaTT;
		
		private string _TenTrang;
		
		private string _NoiDung;
		
		private System.Nullable<System.DateTime> _NgayTao;
		
		private string _MetaTitle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTTChanging(int value);
    partial void OnMaTTChanged();
    partial void OnTenTrangChanging(string value);
    partial void OnTenTrangChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnNgayTaoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTaoChanged();
    partial void OnMetaTitleChanging(string value);
    partial void OnMetaTitleChanged();
    #endregion
		
		public TRANGTIN()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaTT
		{
			get
			{
				return this._MaTT;
			}
			set
			{
				if ((this._MaTT != value))
				{
					this.OnMaTTChanging(value);
					this.SendPropertyChanging();
					this._MaTT = value;
					this.SendPropertyChanged("MaTT");
					this.OnMaTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTrang", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenTrang
		{
			get
			{
				return this._TenTrang;
			}
			set
			{
				if ((this._TenTrang != value))
				{
					this.OnTenTrangChanging(value);
					this.SendPropertyChanging();
					this._TenTrang = value;
					this.SendPropertyChanged("TenTrang");
					this.OnTenTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTao", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NgayTao
		{
			get
			{
				return this._NgayTao;
			}
			set
			{
				if ((this._NgayTao != value))
				{
					this.OnNgayTaoChanging(value);
					this.SendPropertyChanging();
					this._NgayTao = value;
					this.SendPropertyChanged("NgayTao");
					this.OnNgayTaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaTitle", DbType="NVarChar(100)")]
		public string MetaTitle
		{
			get
			{
				return this._MetaTitle;
			}
			set
			{
				if ((this._MetaTitle != value))
				{
					this.OnMetaTitleChanging(value);
					this.SendPropertyChanging();
					this._MetaTitle = value;
					this.SendPropertyChanged("MetaTitle");
					this.OnMetaTitleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ve")]
	public partial class Ve : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Ve;
		
		private System.Nullable<int> _Id_TaiKhoan;
		
		private System.Nullable<int> _Id_LichChieu;
		
		private System.DateTime _NgayDat;
		
		private System.Nullable<decimal> _GiaVe;
		
		private System.Nullable<int> _SoluongGhe;
		
		private EntitySet<Ve_Ghe> _Ve_Ghes;
		
		private EntityRef<LichChieu> _LichChieu;
		
		private EntityRef<TaiKhoan> _TaiKhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_VeChanging(int value);
    partial void OnId_VeChanged();
    partial void OnId_TaiKhoanChanging(System.Nullable<int> value);
    partial void OnId_TaiKhoanChanged();
    partial void OnId_LichChieuChanging(System.Nullable<int> value);
    partial void OnId_LichChieuChanged();
    partial void OnNgayDatChanging(System.DateTime value);
    partial void OnNgayDatChanged();
    partial void OnGiaVeChanging(System.Nullable<decimal> value);
    partial void OnGiaVeChanged();
    partial void OnSoluongGheChanging(System.Nullable<int> value);
    partial void OnSoluongGheChanged();
    #endregion
		
		public Ve()
		{
			this._Ve_Ghes = new EntitySet<Ve_Ghe>(new Action<Ve_Ghe>(this.attach_Ve_Ghes), new Action<Ve_Ghe>(this.detach_Ve_Ghes));
			this._LichChieu = default(EntityRef<LichChieu>);
			this._TaiKhoan = default(EntityRef<TaiKhoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Ve", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_Ve
		{
			get
			{
				return this._Id_Ve;
			}
			set
			{
				if ((this._Id_Ve != value))
				{
					this.OnId_VeChanging(value);
					this.SendPropertyChanging();
					this._Id_Ve = value;
					this.SendPropertyChanged("Id_Ve");
					this.OnId_VeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_TaiKhoan", DbType="Int")]
		public System.Nullable<int> Id_TaiKhoan
		{
			get
			{
				return this._Id_TaiKhoan;
			}
			set
			{
				if ((this._Id_TaiKhoan != value))
				{
					if (this._TaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_TaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._Id_TaiKhoan = value;
					this.SendPropertyChanged("Id_TaiKhoan");
					this.OnId_TaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_LichChieu", DbType="Int")]
		public System.Nullable<int> Id_LichChieu
		{
			get
			{
				return this._Id_LichChieu;
			}
			set
			{
				if ((this._Id_LichChieu != value))
				{
					if (this._LichChieu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_LichChieuChanging(value);
					this.SendPropertyChanging();
					this._Id_LichChieu = value;
					this.SendPropertyChanged("Id_LichChieu");
					this.OnId_LichChieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDat", DbType="DateTime2 NOT NULL")]
		public System.DateTime NgayDat
		{
			get
			{
				return this._NgayDat;
			}
			set
			{
				if ((this._NgayDat != value))
				{
					this.OnNgayDatChanging(value);
					this.SendPropertyChanging();
					this._NgayDat = value;
					this.SendPropertyChanged("NgayDat");
					this.OnNgayDatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaVe", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> GiaVe
		{
			get
			{
				return this._GiaVe;
			}
			set
			{
				if ((this._GiaVe != value))
				{
					this.OnGiaVeChanging(value);
					this.SendPropertyChanging();
					this._GiaVe = value;
					this.SendPropertyChanged("GiaVe");
					this.OnGiaVeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoluongGhe", DbType="Int")]
		public System.Nullable<int> SoluongGhe
		{
			get
			{
				return this._SoluongGhe;
			}
			set
			{
				if ((this._SoluongGhe != value))
				{
					this.OnSoluongGheChanging(value);
					this.SendPropertyChanging();
					this._SoluongGhe = value;
					this.SendPropertyChanged("SoluongGhe");
					this.OnSoluongGheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ve_Ve_Ghe", Storage="_Ve_Ghes", ThisKey="Id_Ve", OtherKey="Id_Ve")]
		public EntitySet<Ve_Ghe> Ve_Ghes
		{
			get
			{
				return this._Ve_Ghes;
			}
			set
			{
				this._Ve_Ghes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LichChieu_Ve", Storage="_LichChieu", ThisKey="Id_LichChieu", OtherKey="Id_LichChieu", IsForeignKey=true)]
		public LichChieu LichChieu
		{
			get
			{
				return this._LichChieu.Entity;
			}
			set
			{
				LichChieu previousValue = this._LichChieu.Entity;
				if (((previousValue != value) 
							|| (this._LichChieu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LichChieu.Entity = null;
						previousValue.Ves.Remove(this);
					}
					this._LichChieu.Entity = value;
					if ((value != null))
					{
						value.Ves.Add(this);
						this._Id_LichChieu = value.Id_LichChieu;
					}
					else
					{
						this._Id_LichChieu = default(Nullable<int>);
					}
					this.SendPropertyChanged("LichChieu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_Ve", Storage="_TaiKhoan", ThisKey="Id_TaiKhoan", OtherKey="Id_TaiKhoan", IsForeignKey=true)]
		public TaiKhoan TaiKhoan
		{
			get
			{
				return this._TaiKhoan.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan.Entity = null;
						previousValue.Ves.Remove(this);
					}
					this._TaiKhoan.Entity = value;
					if ((value != null))
					{
						value.Ves.Add(this);
						this._Id_TaiKhoan = value.Id_TaiKhoan;
					}
					else
					{
						this._Id_TaiKhoan = default(Nullable<int>);
					}
					this.SendPropertyChanged("TaiKhoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ve_Ghes(Ve_Ghe entity)
		{
			this.SendPropertyChanging();
			entity.Ve = this;
		}
		
		private void detach_Ve_Ghes(Ve_Ghe entity)
		{
			this.SendPropertyChanging();
			entity.Ve = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ve_Ghe")]
	public partial class Ve_Ghe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _Id_Ve;
		
		private System.Nullable<int> _Id_Ghe;
		
		private string _TenGhe;
		
		private EntityRef<Ve> _Ve;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnId_VeChanging(System.Nullable<int> value);
    partial void OnId_VeChanged();
    partial void OnId_GheChanging(System.Nullable<int> value);
    partial void OnId_GheChanged();
    partial void OnTenGheChanging(string value);
    partial void OnTenGheChanged();
    #endregion
		
		public Ve_Ghe()
		{
			this._Ve = default(EntityRef<Ve>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Ve", DbType="Int")]
		public System.Nullable<int> Id_Ve
		{
			get
			{
				return this._Id_Ve;
			}
			set
			{
				if ((this._Id_Ve != value))
				{
					if (this._Ve.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_VeChanging(value);
					this.SendPropertyChanging();
					this._Id_Ve = value;
					this.SendPropertyChanged("Id_Ve");
					this.OnId_VeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Ghe", DbType="Int")]
		public System.Nullable<int> Id_Ghe
		{
			get
			{
				return this._Id_Ghe;
			}
			set
			{
				if ((this._Id_Ghe != value))
				{
					this.OnId_GheChanging(value);
					this.SendPropertyChanging();
					this._Id_Ghe = value;
					this.SendPropertyChanged("Id_Ghe");
					this.OnId_GheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenGhe", DbType="NVarChar(50)")]
		public string TenGhe
		{
			get
			{
				return this._TenGhe;
			}
			set
			{
				if ((this._TenGhe != value))
				{
					this.OnTenGheChanging(value);
					this.SendPropertyChanging();
					this._TenGhe = value;
					this.SendPropertyChanged("TenGhe");
					this.OnTenGheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ve_Ve_Ghe", Storage="_Ve", ThisKey="Id_Ve", OtherKey="Id_Ve", IsForeignKey=true)]
		public Ve Ve
		{
			get
			{
				return this._Ve.Entity;
			}
			set
			{
				Ve previousValue = this._Ve.Entity;
				if (((previousValue != value) 
							|| (this._Ve.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ve.Entity = null;
						previousValue.Ve_Ghes.Remove(this);
					}
					this._Ve.Entity = value;
					if ((value != null))
					{
						value.Ve_Ghes.Add(this);
						this._Id_Ve = value.Id_Ve;
					}
					else
					{
						this._Id_Ve = default(Nullable<int>);
					}
					this.SendPropertyChanged("Ve");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sliders")]
	public partial class Slider : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Slider;
		
		private int _Id_Phim;
		
		private string _AnhSlider;
		
		private System.Nullable<bool> _TrangThai;
		
		private EntityRef<Phim> _Phim;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_SliderChanging(int value);
    partial void OnId_SliderChanged();
    partial void OnId_PhimChanging(int value);
    partial void OnId_PhimChanged();
    partial void OnAnhSliderChanging(string value);
    partial void OnAnhSliderChanged();
    partial void OnTrangThaiChanging(System.Nullable<bool> value);
    partial void OnTrangThaiChanged();
    #endregion
		
		public Slider()
		{
			this._Phim = default(EntityRef<Phim>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Slider", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_Slider
		{
			get
			{
				return this._Id_Slider;
			}
			set
			{
				if ((this._Id_Slider != value))
				{
					this.OnId_SliderChanging(value);
					this.SendPropertyChanging();
					this._Id_Slider = value;
					this.SendPropertyChanged("Id_Slider");
					this.OnId_SliderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Phim", DbType="Int NOT NULL")]
		public int Id_Phim
		{
			get
			{
				return this._Id_Phim;
			}
			set
			{
				if ((this._Id_Phim != value))
				{
					if (this._Phim.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_PhimChanging(value);
					this.SendPropertyChanging();
					this._Id_Phim = value;
					this.SendPropertyChanged("Id_Phim");
					this.OnId_PhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnhSlider", DbType="NVarChar(MAX)")]
		public string AnhSlider
		{
			get
			{
				return this._AnhSlider;
			}
			set
			{
				if ((this._AnhSlider != value))
				{
					this.OnAnhSliderChanging(value);
					this.SendPropertyChanging();
					this._AnhSlider = value;
					this.SendPropertyChanged("AnhSlider");
					this.OnAnhSliderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Bit")]
		public System.Nullable<bool> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phim_Slider", Storage="_Phim", ThisKey="Id_Phim", OtherKey="Id_Phim", IsForeignKey=true)]
		public Phim Phim
		{
			get
			{
				return this._Phim.Entity;
			}
			set
			{
				Phim previousValue = this._Phim.Entity;
				if (((previousValue != value) 
							|| (this._Phim.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Phim.Entity = null;
						previousValue.Sliders.Remove(this);
					}
					this._Phim.Entity = value;
					if ((value != null))
					{
						value.Sliders.Add(this);
						this._Id_Phim = value.Id_Phim;
					}
					else
					{
						this._Id_Phim = default(int);
					}
					this.SendPropertyChanged("Phim");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
